# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build-apiserver:
    docker:
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/kramergroup/dhcpmanager
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -v -o /go/bin/apiserver github.com/kramergroup/dhcpmanager/cmd/apiserver
      - persist_to_workspace:
          root: /go
          paths:
            - bin

  build-controller:
    docker:
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/kramergroup/dhcpmanager
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -v -o /go/bin/controller github.com/kramergroup/dhcpmanager/cmd/controller
      - persist_to_workspace:
          root: /go
          paths:
            - bin

  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /go/src/github.com/kramergroup/dhcpmanager
    steps:
      - attach_workspace:
          at: bin
      - checkout
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker build -f cmd/apiserver/Dockerfile.circleci -t kramergroup/dhcpmanager-apiserver
      - run: docker push kramergroup/dhcpmanager-apiserver
      - run: docker build -f cmd/controller/Dockerfile.circleci -t kramergroup/dhcpmanager-controller
      - run: docker push kramergroup/dhcpmanager-controller

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build-apiserver
      - build-controller
      - deploy
        requires:
        - build-apiserver
        - build-controller
